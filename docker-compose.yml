services:
  api:
    container_name: runner-api
    build:
      context: .
      dockerfile: apps/api/Dockerfile
    ports:
      - "4000:4000"
    depends_on:
      - db
      - redis
    env_file: apps/api/.env
    environment:
      DATABASE_URL: "postgres://postgres:postgres@db:5432/runner"
      REDIS_URL: "redis://redis:6379"
      JWT_SECRET: "pnUc6rhS2sLe9u2cj8Bjo+d7r+vS2pimxYssaUJ76bw="
      JWT_EXPIRES_IN: 60

  web:
    container_name: runner-web
    build:
      context: .
      dockerfile: apps/web/Dockerfile
      args:
        AUTH_SECRET: "your secret"
        DATABASE_URL: "postgresql://postgres:postgres@db:5432/runner?schema=public"
        BACKEND_URL: "http://localhost:4000/api"
        AUTH_TRUST_HOST: "true"
    ports:
      - "3000:3000"
    depends_on:
      - api
    environment:
      AUTH_SECRET: "your secret"
      BACKEND_URL: "http://localhost:4000/api"
      DATABASE_URL: "postgresql://postgres:postgres@localhost:5432/runner?schema=public"
    env_file: apps/web/.env

  db:
    image: postgres:17.4
    container_name: runner-db
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: runner

  redis:
    container_name: runner-redis
    image: redis:latest
    ports:
      - "6379:6379"

    command: redis-server --appendonly yes

    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 5s
      retries: 3

      start_period: 10s

    restart: always

  cpp:
    image: runner-cpp
    build:
      context: runners/cpp
      dockerfile: Dockerfile
    command:
